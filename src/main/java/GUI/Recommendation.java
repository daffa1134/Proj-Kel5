/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import javax.swing.JPanel;
import Method.DaftarMenu;
import Method.Makanan;
import Method.Minuman;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Kelompok 5
 */
public class Recommendation extends javax.swing.JFrame {

    static DaftarMenu menu = new DaftarMenu();
    static ArrayList<Makanan> rekomMakan = new ArrayList<>();
    static ArrayList<Minuman> rekomMinum = new ArrayList<>();
    /**
     * Creates new form Recommendation
     */
    public Recommendation() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ynMakanan = new javax.swing.ButtonGroup();
        shtMakanan = new javax.swing.ButtonGroup();
        sizeMinuman = new javax.swing.ButtonGroup();
        ynEs = new javax.swing.ButtonGroup();
        ynKafein = new javax.swing.ButtonGroup();
        bg = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        choose = new javax.swing.JComboBox<>();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        layerMakanan = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        manis = new javax.swing.JCheckBox();
        asam = new javax.swing.JCheckBox();
        asin = new javax.swing.JCheckBox();
        pedas = new javax.swing.JCheckBox();
        gurih = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        mknMoney = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        vegan = new javax.swing.JRadioButton();
        nonVegan = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        healtyF = new javax.swing.JRadioButton();
        junkF = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        negaraMkn = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        layerMinuman = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        manisMnum = new javax.swing.JCheckBox();
        milk = new javax.swing.JCheckBox();
        pahit = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        mnumMoney = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        kecil = new javax.swing.JRadioButton();
        sedang = new javax.swing.JRadioButton();
        besar = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        panas = new javax.swing.JRadioButton();
        dingin = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        caffein = new javax.swing.JRadioButton();
        nonCaffein = new javax.swing.JRadioButton();
        jLabel12 = new javax.swing.JLabel();
        negaraMnum = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        cekRekomendasi = new javax.swing.JButton();
        nextTag = new javax.swing.JButton();
        backHome = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Rekomendasi");
        setResizable(false);
        setSize(new java.awt.Dimension(800, 800));

        bg.setBackground(new java.awt.Color(204, 204, 204));
        bg.setPreferredSize(new java.awt.Dimension(800, 800));
        bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Silahkan pilih:");
        bg.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(83, 45, 160, 20));

        choose.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        choose.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Makanan", "Minuman" }));
        choose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseActionPerformed(evt);
            }
        });
        bg.add(choose, new org.netbeans.lib.awtextra.AbsoluteConstraints(83, 76, 149, -1));

        jLayeredPane1.setLayout(new java.awt.CardLayout());

        layerMakanan.setBackground(new java.awt.Color(255, 222, 173));
        layerMakanan.setPreferredSize(new java.awt.Dimension(600, 480));
        layerMakanan.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Pilih rasa yang anda inginkan:");
        layerMakanan.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 25, -1, -1));

        manis.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        manis.setText("Manis");
        manis.setContentAreaFilled(false);
        manis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manisActionPerformed(evt);
            }
        });
        layerMakanan.add(manis, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 48, 71, -1));

        asam.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        asam.setText("Asam");
        asam.setContentAreaFilled(false);
        asam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asamActionPerformed(evt);
            }
        });
        layerMakanan.add(asam, new org.netbeans.lib.awtextra.AbsoluteConstraints(122, 48, 71, -1));

        asin.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        asin.setText("Asin");
        asin.setContentAreaFilled(false);
        asin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asinActionPerformed(evt);
            }
        });
        layerMakanan.add(asin, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 48, 71, -1));

        pedas.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        pedas.setText("Pedas");
        pedas.setContentAreaFilled(false);
        pedas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pedasActionPerformed(evt);
            }
        });
        layerMakanan.add(pedas, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 48, 71, -1));

        gurih.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        gurih.setText("Gurih");
        gurih.setContentAreaFilled(false);
        gurih.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gurihActionPerformed(evt);
            }
        });
        layerMakanan.add(gurih, new org.netbeans.lib.awtextra.AbsoluteConstraints(389, 48, 71, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Jumlah uang yang anda miliki:");
        layerMakanan.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 101, 236, -1));

        mknMoney.setToolTipText("");
        mknMoney.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mknMoneyClicked(evt);
            }
        });
        mknMoney.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mknMoneyActionPerformed(evt);
            }
        });
        layerMakanan.add(mknMoney, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 133, 169, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setText("Apakah anda seorang vegetarian?");
        layerMakanan.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 180, -1, -1));

        ynMakanan.add(vegan);
        vegan.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        vegan.setText("Ya");
        vegan.setContentAreaFilled(false);
        vegan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                veganActionPerformed(evt);
            }
        });
        layerMakanan.add(vegan, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 208, -1, -1));

        ynMakanan.add(nonVegan);
        nonVegan.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        nonVegan.setText("Tidak");
        nonVegan.setContentAreaFilled(false);
        nonVegan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nonVeganActionPerformed(evt);
            }
        });
        layerMakanan.add(nonVegan, new org.netbeans.lib.awtextra.AbsoluteConstraints(94, 208, -1, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("Pilih tipe makanan yang anda sukai:");
        layerMakanan.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 261, 280, -1));

        shtMakanan.add(healtyF);
        healtyF.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        healtyF.setText("Healthy Food");
        healtyF.setContentAreaFilled(false);
        healtyF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                healtyFActionPerformed(evt);
            }
        });
        layerMakanan.add(healtyF, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 289, -1, -1));

        shtMakanan.add(junkF);
        junkF.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        junkF.setText("Junk Food");
        junkF.setContentAreaFilled(false);
        junkF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                junkFActionPerformed(evt);
            }
        });
        layerMakanan.add(junkF, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 289, -1, -1));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setText("Pilih asal negara produk:");
        layerMakanan.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 342, 252, -1));

        negaraMkn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        negaraMkn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tampilkan Semua", "China", "Indonesia", "Italia", "Mesir" }));
        negaraMkn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                negaraMknActionPerformed(evt);
            }
        });
        layerMakanan.add(negaraMkn, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 369, 160, -1));

        jLabel13.setIcon(new javax.swing.ImageIcon("D:\\Kuliah\\GitHub\\Project_Kel5\\src\\main\\java\\Images\\mkn.png")); // NOI18N
        layerMakanan.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 230, 420, 350));

        jLayeredPane1.add(layerMakanan, "card2");

        layerMinuman.setBackground(new java.awt.Color(100, 149, 237));
        layerMinuman.setPreferredSize(new java.awt.Dimension(600, 480));
        layerMinuman.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setText("Pilih rasa yang anda inginkan:");
        layerMinuman.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 25, -1, -1));

        manisMnum.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        manisMnum.setText("Manis");
        manisMnum.setContentAreaFilled(false);
        manisMnum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manisMnumActionPerformed(evt);
            }
        });
        layerMinuman.add(manisMnum, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 48, 71, -1));

        milk.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        milk.setText("Milk");
        milk.setContentAreaFilled(false);
        milk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                milkActionPerformed(evt);
            }
        });
        layerMinuman.add(milk, new org.netbeans.lib.awtextra.AbsoluteConstraints(122, 48, 71, -1));

        pahit.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        pahit.setText("Pahit");
        pahit.setContentAreaFilled(false);
        pahit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pahitActionPerformed(evt);
            }
        });
        layerMinuman.add(pahit, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 48, 70, -1));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel8.setText("Jumlah uang yang anda miliki:");
        layerMinuman.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 101, 236, -1));

        mnumMoney.setToolTipText("Press enter after fill amount of money");
        mnumMoney.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnumMoneyClicked(evt);
            }
        });
        mnumMoney.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnumMoneyActionPerformed(evt);
            }
        });
        layerMinuman.add(mnumMoney, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 132, 169, -1));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel9.setText("Pilih ukuran minuman:");
        layerMinuman.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 179, -1, -1));

        sizeMinuman.add(kecil);
        kecil.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        kecil.setText("Kecil");
        kecil.setContentAreaFilled(false);
        layerMinuman.add(kecil, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 206, -1, -1));

        sizeMinuman.add(sedang);
        sedang.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        sedang.setText("Sedang");
        sedang.setContentAreaFilled(false);
        layerMinuman.add(sedang, new org.netbeans.lib.awtextra.AbsoluteConstraints(106, 206, -1, -1));

        sizeMinuman.add(besar);
        besar.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        besar.setText("Besar");
        besar.setContentAreaFilled(false);
        layerMinuman.add(besar, new org.netbeans.lib.awtextra.AbsoluteConstraints(191, 206, -1, -1));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel10.setText("Jenis minuman:");
        layerMinuman.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 259, -1, -1));

        ynEs.add(panas);
        panas.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        panas.setText("Panas");
        panas.setContentAreaFilled(false);
        panas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                panasActionPerformed(evt);
            }
        });
        layerMinuman.add(panas, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 282, -1, -1));

        ynEs.add(dingin);
        dingin.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        dingin.setText("Dingin");
        dingin.setContentAreaFilled(false);
        dingin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dinginActionPerformed(evt);
            }
        });
        layerMinuman.add(dingin, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 282, -1, -1));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel11.setText("Mengandung kafein?");
        layerMinuman.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 335, -1, -1));

        ynKafein.add(caffein);
        caffein.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        caffein.setText("Ya");
        caffein.setContentAreaFilled(false);
        caffein.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caffeinActionPerformed(evt);
            }
        });
        layerMinuman.add(caffein, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 358, -1, -1));

        ynKafein.add(nonCaffein);
        nonCaffein.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        nonCaffein.setText("Tidak");
        nonCaffein.setContentAreaFilled(false);
        nonCaffein.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nonCaffeinActionPerformed(evt);
            }
        });
        layerMinuman.add(nonCaffein, new org.netbeans.lib.awtextra.AbsoluteConstraints(94, 358, -1, -1));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel12.setText("Pilih asal negara produk:");
        layerMinuman.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 411, 252, -1));

        negaraMnum.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        negaraMnum.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tampilkan Semua", "Jepang", "Malaysia", "Thailand" }));
        negaraMnum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                negaraMnumActionPerformed(evt);
            }
        });
        layerMinuman.add(negaraMnum, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 438, 160, -1));

        jLabel15.setIcon(new javax.swing.ImageIcon("D:\\Kuliah\\GitHub\\Project_Kel5\\src\\main\\java\\Images\\mnm.png")); // NOI18N
        layerMinuman.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 160, 360, 330));

        jLayeredPane1.add(layerMinuman, "card3");

        bg.add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(83, 123, -1, 489));

        cekRekomendasi.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cekRekomendasi.setText("Cek Rekomendasi");
        cekRekomendasi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cekRekomendasiActionPerformed(evt);
            }
        });
        bg.add(cekRekomendasi, new org.netbeans.lib.awtextra.AbsoluteConstraints(545, 657, -1, -1));

        nextTag.setBackground(new java.awt.Color(255, 255, 255));
        nextTag.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        nextTag.setForeground(new java.awt.Color(255, 255, 255));
        nextTag.setText(">");
        nextTag.setToolTipText("click to get tag list");
        nextTag.setBorderPainted(false);
        nextTag.setContentAreaFilled(false);
        nextTag.setMargin(new java.awt.Insets(0, 0, 0, 0));
        nextTag.setPreferredSize(new java.awt.Dimension(20, 20));
        nextTag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextTagActionPerformed(evt);
            }
        });
        bg.add(nextTag, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 760, 30, 30));

        backHome.setBackground(new java.awt.Color(255, 255, 255));
        backHome.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        backHome.setForeground(new java.awt.Color(255, 255, 255));
        backHome.setText("<");
        backHome.setToolTipText("click to return to menu");
        backHome.setBorderPainted(false);
        backHome.setContentAreaFilled(false);
        backHome.setMargin(new java.awt.Insets(0, 0, 0, 0));
        backHome.setPreferredSize(new java.awt.Dimension(20, 20));
        backHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backHomeActionPerformed(evt);
            }
        });
        bg.add(backHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 760, 30, 30));

        jLabel14.setIcon(new javax.swing.ImageIcon("D:\\Kuliah\\GitHub\\Project_Kel5\\src\\main\\java\\Images\\bg.jpg")); // NOI18N
        bg.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 800));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseActionPerformed
        // TODO add your handling code here:
        if(choose.getSelectedItem().equals("Makanan")) {
            switchPane(layerMakanan);
        } else {
            switchPane(layerMinuman);
        }
    }//GEN-LAST:event_chooseActionPerformed

    private void junkFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_junkFActionPerformed
        // TODO add your handling code here:
        if(rekomMakan.isEmpty()) {
            addMenuMakan();
        }
        int loop = rekomMakan.size();
        int i = 0;
        while(i <= loop) {
            if(rekomMakan.get(i).getHealty()) {
            rekomMakan.remove(i);
            loop = rekomMakan.size();
            i = 0;
            } else {
            i++;
            }
        }
    }//GEN-LAST:event_junkFActionPerformed

    private void nextTagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextTagActionPerformed
        // TODO add your handling code here:
        DaftarTag dt = new DaftarTag();
        dt.setVisible(true);
    }//GEN-LAST:event_nextTagActionPerformed

    private void backHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backHomeActionPerformed
        // TODO add your handling code here:
        Home h = new Home();
        h.setVisible(true);
        dispose();
    }//GEN-LAST:event_backHomeActionPerformed

    private void cekRekomendasiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cekRekomendasiActionPerformed
        // TODO add your handling code here:
        Output out = new Output();
      
        if(choose.getSelectedItem().equals("Makanan")) {   
            cekSamaMakan();
            int jlh = rekomMakan.size();
            String pmbuka = "Berikut makanan yang kami rekomendasikan: \n\n";
            if (jlh == 1) {
                out.setTeks(pmbuka +
                            rekomMakan.get(0).getNama());
            } else if (jlh == 2) {
                out.setTeks(pmbuka +
                            rekomMakan.get(0).getNama() + "\n" +
                            rekomMakan.get(1).getNama());
            } else if (jlh == 3) {
                out.setTeks(pmbuka +
                            rekomMakan.get(0).getNama() + "\n" +
                            rekomMakan.get(1).getNama() + "\n" + 
                            rekomMakan.get(2).getNama());
            } else if (jlh == 4) {
                out.setTeks(pmbuka +
                            rekomMakan.get(0).getNama() + "\n" +
                            rekomMakan.get(1).getNama() + "\n" +
                            rekomMakan.get(2).getNama() + "\n" +
                            rekomMakan.get(3).getNama());
            } else {
                out.setTeks("Maaf tidak ada rekomendasi yang sesuai dengan budget atau selera anda :(");
            }
            rekomMakan.clear();
        } else {
            String pmbuka = "Berikut minuman yang kami rekomendasikan: \n\n";
            cekSamaMinum();
            int jlh = rekomMinum.size();
            if (jlh == 1) {
                out.setTeks(pmbuka +
                            rekomMinum.get(0).getNama());
            } else if (jlh == 2) {
                out.setTeks(pmbuka +
                            rekomMinum.get(0).getNama() + "\n" +
                            rekomMinum.get(1).getNama());
            } else if (jlh == 3) {
                out.setTeks(pmbuka +
                            rekomMinum.get(0).getNama() + "\n" +
                            rekomMinum.get(1).getNama() + "\n" + 
                            rekomMinum.get(2).getNama());
            } else {
                out.setTeks("Maaf tidak ada rekomendasi yang sesuai dengan budget atau selera anda :(");
            }
            rekomMinum.clear();
        }
        out.setVisible(true);
        dispose();
    }//GEN-LAST:event_cekRekomendasiActionPerformed

    private void veganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_veganActionPerformed
        // TODO add your handling code here:
        if(rekomMakan.isEmpty()) {
            addMenuMakan();
        }
        int loop = rekomMakan.size();
        int i = 0;        
        while(i <= loop) {
            if(rekomMakan.get(i).getVegan()) {
                i++;
            } else {
                rekomMakan.remove(i);
                loop = rekomMakan.size();
                i = 0; 
            }
        }
    }//GEN-LAST:event_veganActionPerformed

    private void manisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manisActionPerformed
        // TODO add your handling code here:
        rekomMakan.add(menu.getSpaghetti());
        rekomMakan.add(menu.getRotiDaging());
    }//GEN-LAST:event_manisActionPerformed

    private void asamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asamActionPerformed
        // TODO add your handling code here:
        addMenuMakan();
    }//GEN-LAST:event_asamActionPerformed

    private void asinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asinActionPerformed
        // TODO add your handling code here:
        rekomMakan.add(menu.getNasGor());
    }//GEN-LAST:event_asinActionPerformed

    private void pedasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pedasActionPerformed
        // TODO add your handling code here:
        if(pedas.isSelected()) {
            rekomMakan.add(menu.getSpaghetti());
            rekomMakan.add(menu.getKofta());
        }
    }//GEN-LAST:event_pedasActionPerformed

    private void gurihActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gurihActionPerformed
        // TODO add your handling code here:
        if(gurih.isSelected()) {
            rekomMakan.add(menu.getNasGor());
        }
    }//GEN-LAST:event_gurihActionPerformed

    private void mknMoneyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mknMoneyActionPerformed
        // TODO add your handling code here:
        if(rekomMakan.isEmpty()) {
            addMenuMakan();
        }
        
        int money = Integer.parseInt(mknMoney.getText());
        int loop = rekomMakan.size();
        int i = 0;
        while(i <= loop) {
            if(money < rekomMakan.get(i).getHarga()) {
                rekomMakan.remove(i);
                loop = rekomMakan.size();
                i = 0;
            } else {
                i++;
            }
        }
    }//GEN-LAST:event_mknMoneyActionPerformed

    private void nonVeganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nonVeganActionPerformed
        // TODO add your handling code here:
        if(rekomMakan.isEmpty()) {
            addMenuMakan();
        }
        int loop = rekomMakan.size();
        int i = 0;
        while(i <= loop) {
            if(rekomMakan.get(i).getVegan()) {
                rekomMakan.remove(i);
                loop = rekomMakan.size();
                i = 0;
            } else {
                i++;
            }
        }
    }//GEN-LAST:event_nonVeganActionPerformed

    private void healtyFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_healtyFActionPerformed
        // TODO add your handling code here:
        if(rekomMakan.isEmpty()) {
            addMenuMakan();
        }
        int loop = rekomMakan.size();
        int i = 0;
        while(i <= loop) {
            if(rekomMakan.get(i).getHealty()) {
                i++;
            } else {
            rekomMakan.remove(i);
            loop = rekomMakan.size();
            i = 0;
            }
        }
    }//GEN-LAST:event_healtyFActionPerformed

    private void negaraMknActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_negaraMknActionPerformed
        // TODO add your handling code here:
        if(rekomMakan.isEmpty()) {
            addMenuMakan();
        }
        
        if (negaraMkn.getSelectedItem().equals("China")) {
            int loop = rekomMakan.size();
            int i = 0;
            while(i <= loop) {
            if(rekomMakan.get(i).getNegara().equalsIgnoreCase("China")) {
                i++;
            } else {
                rekomMakan.remove(i);
                loop = rekomMakan.size();
                i = 0;
            }
            }
        } else if (negaraMkn.getSelectedItem().equals("Indonesia")) {
            int loop = rekomMakan.size();
            int i = 0;
            while(i <= loop) {
            if(rekomMakan.get(i).getNegara().equalsIgnoreCase("Indonesia")) {
                i++;
            } else {
                rekomMakan.remove(i);
                loop = rekomMakan.size();
                i = 0;
            }
            }
        } else if (negaraMkn.getSelectedItem().equals("Italia")) {
            int loop = rekomMakan.size();
            int i = 0;
            while(i <= loop) {
            if(rekomMakan.get(i).getNegara().equalsIgnoreCase("Italia")) {
                i++;
            } else {
                rekomMakan.remove(i);
                loop = rekomMakan.size();
                i = 0;
            }
            }
        } else if(negaraMkn.getSelectedItem().equals("Mesir")) {
            int loop = rekomMakan.size();
            int i = 0;
            while(i <= loop) {
            if(rekomMakan.get(i).getNegara().equalsIgnoreCase("Mesir")) {
                i++;
            } else {
                rekomMakan.remove(i);
                loop = rekomMakan.size();
                i = 0;
            }
            }
        }
    }//GEN-LAST:event_negaraMknActionPerformed

    private void negaraMnumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_negaraMnumActionPerformed
        // TODO add your handling code here:
        if(rekomMinum.isEmpty()) {
            addMenuMinum();
        }
        
        if (negaraMnum.getSelectedItem().equals("Jepang")) {
            int loop = rekomMinum.size();
            int i = 0;
            while(i <= loop) {
            if(rekomMinum.get(i).getNegara().equalsIgnoreCase("Jepang")) {
                i++;
            } else {
                rekomMinum.remove(i);
                loop = rekomMinum.size();
                i = 0;
            }
            }
        } else if (negaraMnum.getSelectedItem().equals("Malaysia")) {
            int loop = rekomMinum.size();
            int i = 0;
            while(i <= loop) {
            if(rekomMinum.get(i).getNegara().equalsIgnoreCase("Malaysia")) {
                i++;
            } else {
                rekomMinum.remove(i);
                loop = rekomMinum.size();
                i = 0;
            }
            }
        } else if (negaraMnum.getSelectedItem().equals("Thailand")) {
            int loop = rekomMinum.size();
            int i = 0;
            while(i <= loop) {
            if(rekomMinum.get(i).getNegara().equalsIgnoreCase("Thailand")) {
                i++;
            } else {
                rekomMinum.remove(i);
                loop = rekomMinum.size();
                i = 0;
            }
            }
        }
    }//GEN-LAST:event_negaraMnumActionPerformed

    private void manisMnumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manisMnumActionPerformed
        // TODO add your handling code here:
        rekomMinum.add(menu.getIceABCD());
        rekomMinum.add(menu.getThaiTea());
    }//GEN-LAST:event_manisMnumActionPerformed

    private void milkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_milkActionPerformed
        // TODO add your handling code here:
        rekomMinum.add(menu.getIceABCD());
        rekomMinum.add(menu.getThaiTea());
    }//GEN-LAST:event_milkActionPerformed

    private void pahitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pahitActionPerformed
        // TODO add your handling code here:
        rekomMinum.add(menu.getOcha());
    }//GEN-LAST:event_pahitActionPerformed

    private void mnumMoneyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnumMoneyActionPerformed
        // TODO add your handling code here:
        if(rekomMinum.isEmpty()) {
            addMenuMinum();
        }
        
        int money = Integer.parseInt(mnumMoney.getText());
        int loop = rekomMinum.size();
        int i = 0;
        while(i <= loop) {
            if(money < rekomMinum.get(i).getHarga()) {
                rekomMinum.remove(i);
                loop = rekomMinum.size();
                i = 0;
            } else {
                i++;
            }
        }
    }//GEN-LAST:event_mnumMoneyActionPerformed

    private void panasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_panasActionPerformed
        // TODO add your handling code here:
        if(rekomMinum.isEmpty()) {
            addMenuMinum();
        }
        int loop = rekomMinum.size();
        int i = 0;
        while(i <= loop) {
            if(rekomMinum.get(i).getDingin()) {
            rekomMinum.remove(i);
            loop = rekomMinum.size();
            i = 0;
            } else {
            i++;
            }
        }
    }//GEN-LAST:event_panasActionPerformed

    private void dinginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dinginActionPerformed
        // TODO add your handling code here:
        if(rekomMinum.isEmpty()) {
            addMenuMinum();
        }
        int loop = rekomMinum.size();
        int i = 0;        
        while(i <= loop) {
            if(rekomMinum.get(i).getDingin()) {
                i++;
            } else {
                rekomMinum.remove(i);
                loop = rekomMinum.size();
                i = 0; 
            }
        }
    }//GEN-LAST:event_dinginActionPerformed

    private void caffeinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caffeinActionPerformed
        // TODO add your handling code here:
        if(rekomMinum.isEmpty()) {
            addMenuMinum();
        }
        int loop = rekomMinum.size();
        int i = 0;        
        while(i <= loop) {
            if(rekomMinum.get(i).getCaffein()) {
                i++;
            } else {
                rekomMinum.remove(i);
                loop = rekomMinum.size();
                i = 0; 
            }
        }
    }//GEN-LAST:event_caffeinActionPerformed

    private void nonCaffeinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nonCaffeinActionPerformed
        // TODO add your handling code here:
        if(rekomMinum.isEmpty()) {
            addMenuMinum();
        }
        int loop = rekomMinum.size();
        int i = 0;
        while(i <= loop) {
            if(rekomMinum.get(i).getCaffein()) {
            rekomMinum.remove(i);
            loop = rekomMinum.size();
            i = 0;
            } else {
            i++;
            }
        }
    }//GEN-LAST:event_nonCaffeinActionPerformed

    private void mknMoneyClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mknMoneyClicked
        // TODO add your handling code here:
        clickMoneyArea();
    }//GEN-LAST:event_mknMoneyClicked

    private void mnumMoneyClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnumMoneyClicked
        // TODO add your handling code here:
        clickMoneyArea();
    }//GEN-LAST:event_mnumMoneyClicked

    // Berpindah panel
    private void switchPane(JPanel panel) {
        jLayeredPane1.removeAll();
        jLayeredPane1.add(panel);
        jLayeredPane1.repaint();
        jLayeredPane1.revalidate();
    }
    
    private void addMenuMakan() {
        rekomMakan.add(menu.getSpaghetti());
        rekomMakan.add(menu.getNasGor());
        rekomMakan.add(menu.getRotiDaging());
        rekomMakan.add(menu.getKofta());
    }
    
    private void addMenuMinum() {
        rekomMinum.add(menu.getOcha());
        rekomMinum.add(menu.getIceABCD());
        rekomMinum.add(menu.getThaiTea());
    }
    
    private void cekSamaMakan() {
        for(int i = 0; i < rekomMakan.size()-1; i++) {
            for(int j = i; j < rekomMakan.size()-1; j++) {
                if(rekomMakan.get(i).equals(rekomMakan.get(j+1))) {
                    rekomMakan.remove(i);
                }
            }
        }
    }
    
    private void cekSamaMinum() {
        for(int i = 0; i < rekomMinum.size()-1; i++) {
            for(int j = i; j < rekomMinum.size()-1; j++) {
                if(rekomMinum.get(i).equals(rekomMinum.get(j+1))) {
                    rekomMinum.remove(i);
                }
            }
        }
    }
    
    private void clickMoneyArea() {
        JOptionPane.showMessageDialog(this,"Press enter after fill amount of money");
        JOptionPane.getRootFrame().dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox asam;
    private javax.swing.JCheckBox asin;
    private javax.swing.JButton backHome;
    private javax.swing.JRadioButton besar;
    private javax.swing.JPanel bg;
    private javax.swing.JRadioButton caffein;
    private javax.swing.JButton cekRekomendasi;
    private javax.swing.JComboBox<String> choose;
    private javax.swing.JRadioButton dingin;
    private javax.swing.JCheckBox gurih;
    private javax.swing.JRadioButton healtyF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JRadioButton junkF;
    private javax.swing.JRadioButton kecil;
    private javax.swing.JPanel layerMakanan;
    private javax.swing.JPanel layerMinuman;
    private javax.swing.JCheckBox manis;
    private javax.swing.JCheckBox manisMnum;
    private javax.swing.JCheckBox milk;
    private javax.swing.JTextField mknMoney;
    private javax.swing.JTextField mnumMoney;
    private javax.swing.JComboBox<String> negaraMkn;
    private javax.swing.JComboBox<String> negaraMnum;
    private javax.swing.JButton nextTag;
    private javax.swing.JRadioButton nonCaffein;
    private javax.swing.JRadioButton nonVegan;
    private javax.swing.JCheckBox pahit;
    private javax.swing.JRadioButton panas;
    private javax.swing.JCheckBox pedas;
    private javax.swing.JRadioButton sedang;
    private javax.swing.ButtonGroup shtMakanan;
    private javax.swing.ButtonGroup sizeMinuman;
    private javax.swing.JRadioButton vegan;
    private javax.swing.ButtonGroup ynEs;
    private javax.swing.ButtonGroup ynKafein;
    private javax.swing.ButtonGroup ynMakanan;
    // End of variables declaration//GEN-END:variables
}